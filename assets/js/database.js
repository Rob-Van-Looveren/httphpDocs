window.database = {
  
    
      
    
    "docs-ansible-html": {
      "title": "Ansible",
      "category": "",
      "content": "AnsibleStart VMChange default settings  Verander default password van root passwd  Stel statisch IP adres in /etc/sysconfig/network-scripts/ifcfg-eth0  Herlaad network services via service network restart  stel hostname in hostnamectl set-hostname &lt;HOSTNAME&gt;oot  pas /etc/hosts aan  rebootoptioneelnano /etc/ssh/sshd_configbanner /etc/bannerservice sshd restarthttp://patorjk.com/software/taag/#p=display&amp;f=Big&amp;t=httpdAnsible instalerenyum update -yyum install epel-release -yyum install ansible -ytest installatie ```ansible --version```user toevoegen op mastersudo useradd ansiblesudo usermod -aG wheel ansiblesudo passwd ansiblesed -i 's/# %wheel\\tALL=(ALL)\\tNOPASSWD: ALL/%wheel\\tALL=(ALL)\\tNOPASSWD: ALL/g' /etc/sudoerssudo su - ansible; cdssh-keygen[ansible@master ~]$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/ansible/.ssh/id_rsa):Created directory '/home/ansible/.ssh'.Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /home/ansible/.ssh/id_rsa.Your public key has been saved in /home/ansible/.ssh/id_rsa.pub.The key fingerprint is:SHA256:SVzvnqARSeI7EUhsxEDr3pjRLK/1rnp/9LI2bAvrf8o ansible@masterThe key's randomart image is:+---[RSA 2048]----+| .o*o.o . .      ||   .=. = o .     ||  ..  o =   .    || . o   + o .     ||  + o o S . .    || . B   ..o o .   ||  + + .o..  o    ||   o.. +B o      ||  oo.=*=EB       |+----[SHA256]-----+[ansible@master ~]$ansible op slave instellenop slave  sudo useradd ansible  sudo usermod -aG wheel ansible  sudo passwd ansible  sed -i ‘s/# %wheel\\tALL=(ALL)\\tNOPASSWD: ALL/%wheel\\tALL=(ALL)\\tNOPASSWD: ALL/g’ /etc/sudoers    op master    sudo su - ansible; cd  sudo nano /etc/ansible/hosts  slave toevoegen  master ansible_host=192.168.3.101  ssh-copy-id ansible@[ansible@master ~]$ ssh-copy-id ansible@192.168.3.102/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/home/ansible/.ssh/id_rsa.pub\"The authenticity of host '192.168.3.102 (192.168.3.102)' can't be established.ECDSA key fingerprint is SHA256:8o4nL7xITfSqHBMj+fMSuv2dG6RMdDE/9JYEfRN67iM.ECDSA key fingerprint is MD5:a5:37:fb:ec:39:09:3d:44:61:82:08:3e:c3:1f:e3:7a.Are you sure you want to continue connecting (yes/no)? yes/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys  _     _   _             _ | |   | | | |           | | | |__ | |_| |_ _ __   __| | | '_ \\| __| __| '_ \\ / _` | | | | | |_| |_| |_) | (_| | |_| |_|\\__|\\__| .__/ \\__,_|               | |               |_|ansible@192.168.3.102's password:Number of key(s) added: 1Now try logging into the machine, with:   \"ssh 'ansible@192.168.3.102'\"and check to make sure that only the key(s) you wanted were added.TESTENop mastersu ansible; cdansible -m ping all[ansible@master ~]$ ansible -m ping allhttpd | SUCCESS =&gt; {    \"ansible_facts\": {        \"discovered_interpreter_python\": \"/usr/bin/python\"    },    \"changed\": false,    \"ping\": \"pong\"}[ansible@master ~]$linksDigital Ocean",
      "url": "/Docs/Ansible.html",
      "href": "/httphpDocs/Docs/Ansible.html"
    }
    ,
  
    
    "docs-borg-html": {
      "title": "Borg",
      "category": "",
      "content": "Borg backupBorgmatic  run ansible playbook to install borg on backup server  mkdir /backups      chown ansible:ansible /backups    generate ssh keys for root on host      ssh-copy-id ansible@192.168.3.108    install borg on host  generate-borgmatic-config  set direcroty’s to backup  set remote repo          ansible@192.168.3.108:/backups/httpd        set storige section  set retention  borg init -e repokey ansible@192.168.3.108:/backups/httpd          enter repo key      export key –&gt; borg key export ansible@192.168.3.108:/backups/httpd ./key.txt            zet repokey in config /etc/bormatic/config.yaml    0 * * * * root /usr/local/bin/borgmatic –syslog-verbosity 1  name: Ensure a job that runs at 2 and 5 exists. Creates an entry like “0 5,2 * * ls -alh &gt; /dev/null”cron:  name: “check dirs”  minute: “0”  hour: “5,2”  job: “ls -alh &gt; /dev/null”sudo yum install ntpsudo systemctl enable ntpdsudo systemctl start ntpd",
      "url": "/Docs/Borg.html",
      "href": "/httphpDocs/Docs/Borg.html"
    }
    ,
  
    
    "docs-centos-html": {
      "title": "Centos",
      "category": "",
      "content": "CentOS 7We downloaden een ISO image voor CentOs 7 in dit geval gebruiken we onderstaande image.CentOS-7-x86_64-Everything-1908.isoDefault machine specs            item      waarde                  RAM      4GB              CPU      4 cores              Disk      32GB              Network      1 NIC op 192.168.3.0/24      Na dat we de volledige installatie hebben doorlopen conveteren we deze VM naar een Template.eerst yum update -y alle packages worden geupdate –&gt; duurt lang, niet telkens opnieuw doen.",
      "url": "/Docs/CentOS.html",
      "href": "/httphpDocs/Docs/CentOS.html"
    }
    ,
  
    
    "docs-ops-20cards-html": {
      "title": "OPS Report Cards",
      "category": "",
      "content": "OPS Report Cards            OPS      Waar      Info                  1. Ticket System      Zammad      User &amp; Interne Tickets, Helpdesk, Knodleddge Base, LDAP login              3. Metrics      Zabbix      Host monitoring, In LDAP kunnen we dan # users zien              5. Password Safe      Bitwarden      Selfhosted Password Vault (Betaalde versie heeft LDAP login)              6. Source Control      Gitlab      Prive &amp; publieke Repo’s, interne repo’s, met ldap login              7. Bug Tracking      Gitlab &amp; Zammad      Gitlab heeft ‘Issues’ functie om bugs te tracken              16. automation      Ansible      Met ansible kunnen we hosts vanaf 0 configureren of taken automatiseren (vhosts instellen,…)              25. Backups      Borg Backup      Met borg &amp; Borgmatic kunnen we backups nemen, configurern en automatiseren              31 Password change      OpenLDAP      Via openLDAP kunnen op 1 centrale plaats users beheren en dus enable/disabelen en password veranderen      ",
      "url": "/Docs/OPS%20cards.html",
      "href": "/httphpDocs/Docs/OPS%20cards.html"
    }
    ,
  
    
    "docs-openldap-20copy-html": {
      "title": "OpenLDAP",
      "category": "",
      "content": "OpenLDAPInstallerenopenldap van repository downloadenyum -y install openldap openldap-servers openldap-clientsopenldap starten en enablensystemctl enable slapdsystemctl start slapdsystemctl status slapdmaak directory om eenvoudig te werkenmkdir /ldapcd /ldaprandom wachtwoord genereren en omzetten naar ldap root passwordslappasswdNew password: ***Re-enter new password: ***{SSHA}mzEx3Pw1xrqi***openldap configuerenmaak database.ldif bestand aan in directroy en pastdn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcSuffixolcSuffix: &lt;DOMAIN NAME&gt; dn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcRootDNolcRootDN: &lt;ROOT VAN DOMAIN &gt; dn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcRootPWolcRootPW: &lt;HASHED PWD VAN ROOT&gt;Vervang de waarde naar de gewenste infodn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcSuffixolcSuffix: dc=httphp,dc=localdn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcRootDNolcRootDN: cn=ldapadmin,dc=httphp,dc=localdn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcRootPWolcRootPW: {SSHA}vNkky70REsznqT9DV+LsYK2TGIsKwPA8Aanpassingen doorvoeren in LDAPldapmodify -Y EXTERNAL -H ldapi:/// -f database.ldif[root@master ldap]# ldapmodify -Y EXTERNAL -H ldapi:/// -f database.ldifSASL/EXTERNAL authentication startedSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=authSASL SSF: 0modifying entry \"olcDatabase={2}hdb,cn=config\"modifying entry \"olcDatabase={2}hdb,cn=config\"modifying entry \"olcDatabase={2}hdb,cn=config\"[root@master ldap]#Rechten aanpassenmaak rights.ldif en pastdn: olcDatabase={1}monitor,cn=configchangetype: modifyreplace: olcAccessolcAccess: {0}to * by dn.base=\"gidNumber=0+uidNumber=0,cn=peercred,cn=external, cn=auth\" read by dn.base=\"cn=ldapadm,dc=field,dc=linuxhostsupport,dc=com\" read by * nonewijzigen naar gewenste gegevensdn: olcDatabase={1}monitor,cn=configchangetype: modifyreplace: olcAccessolcAccess: {0}to * by dn.base=\"gidNumber=0+uidNumber=0,cn=peercred,cn=external, cn=auth\" read by dn.base=\"cn=ldapadmin,dc=httphp,dc=local\" read by * nonewijzigen van rechten doorvoerenldapmodify -Y EXTERNAL -H ldapi:/// -f rights.ldif[root@master ldap]# ldapmodify -Y EXTERNAL -H ldapi:/// -f rights.ldifSASL/EXTERNAL authentication startedSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=authSASL SSF: 0modifying entry \"olcDatabase={1}monitor,cn=config\"LDAP Datbase instellenwe hebben momenteel enkel een lege database.Sample database configuratie kopierencp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIGchown -R ldap:ldap /var/lib/ldapstandaard schema’s aan database toevoegenldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldifldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldifldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif[root@master ldap]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldifSASL/EXTERNAL authentication startedSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=authSASL SSF: 0adding new entry \"cn=cosine,cn=schema,cn=config\"[root@master ldap]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldifSASL/EXTERNAL authentication startedSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=authSASL SSF: 0adding new entry \"cn=nis,cn=schema,cn=config\"[root@master ldap]# ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldifSASL/EXTERNAL authentication startedSASL username: gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=authSASL SSF: 0adding new entry \"cn=inetorgperson,cn=schema,cn=config\"domain &amp; structuur instellenmaak base.ldif aan en pastdn: dc=httphp,dc=localdc: httphpobjectClass: topobjectClass: domaindn: cn=ldapadmin,dc=httphp,dc=localobjectClass: organizationalRolecn: ldapadmdescription: LDAP Managerdn: ou=users,dc=httphp,dc=localobjectClass: organizationalUnitou: usersdn: ou=groups,dc=httphp,dc=localobjectClass: organizationalUnitou: groupsdn: cn=users,ou=groups,dc=httphp,dc=localobjectClass: topobjectClass: posixGroupgidNumber: 1501dn: cn=junior,ou=groups,dc=httphp,dc=localobjectClass: topobjectClass: posixGroupgidNumber: 1502dn: cn=staff,ou=groups,dc=httphp,dc=localobjectClass: topobjectClass: posixGroupgidNumber: 1503dn: cn=admins,ou=groups,dc=httphp,dc=localobjectClass: topobjectClass: posixGroupgidNumber: 1504wijzigingen doorvoerenldapadd -x -W -D \"cn=ldapadmin,dc=httphp,dc=local\" -f base.ldif[root@master ldap]# ldapadd -x -W -D \"cn=ldapadmin,dc=httphp,dc=local\" -f base.ldifEnter LDAP Password:adding new entry \"dc=httphp,dc=local\"adding new entry \"cn=ldapadmin,dc=httphp,dc=local\"adding new entry \"ou=users,dc=httphp,dc=local\"adding new entry \"ou=groups,dc=httphp,dc=local\"adding new entry \"cn=users,ou=groups,dc=httphp,dc=local\"adding new entry \"cn=junior,ou=groups,dc=httphp,dc=local\"adding new entry \"cn=staff,ou=groups,dc=httphp,dc=local\"adding new entry \"cn=admins,ou=groups,dc=httphp,dc=local\"LDAP PORT 389 openenfirewall-cmd --zone=public --add-port=389/tcp --permanentfirewall-cmd --reloadLDAP bekijken in GUIWe kunnen de inhoud van de LDAP database bekijken via verschillende programmas.download jXplorerdownload jExplorer en installeer.dn: uid=test,ou=users,dc=httphp,dc=localobjectClass: inetOrgPersonobjectClass: posixAccountobjectClass: shadowAccountcn: testsn: LinuxuserPassword: {SSHA}ofnbY6UwV+DhkS7oGR4/o9DcU2eCWqYdloginShell: /bin/bashuidNumber: 1001gidNumber: 1501homeDirectory: /webfiles/testlinks  LikeGeeks  LinuxHost",
      "url": "/Docs/OpenLDAP%20copy.html",
      "href": "/httphpDocs/Docs/OpenLDAP%20copy.html"
    }
    ,
  
    
      
    
    "": {
      "title": "Home",
      "category": "",
      "content": "## Beschrijving * [Master](#master)* [Web server](#webserver)* [FTP](#ftp)* [Database](#database)* [Docker](#docker)  * [Helpdesk](#helpdesk)  * [Password Vault](#password-vault)  * [Status](#status)  * [Cloud](#cloud)* [Monitoring](#monitoring)* [Backup](#backup)![]({{site.baseurl}}/assets/images/Dia1.png)&nbsp;### Master* Ansible* OpenLDAP* Mangement applicatie ![]({{site.baseurl}}/assets/images/ansible.png)&nbsp;![]({{site.baseurl}}/assets/images/openldap.png)Is het hart van het systeem. Vanaf hier worden ansible playbooks uitgevoerd om andere hosts te configueren en instellingen aan te passen.Daarnaast worden hier ook user beheerd via OpenLDAP, dit zorgt er voor dat we een centrale service hebben voor het beheren van gebruikers.Ten slote draait hier een lokale LAMP stack waarop het management systeem draait*__Waarom keuze opsplitsing LAMP stack__**Waarom niet alles op 1 machine; web, ftp, database in 1*Eerder als Proof of Concept: Stel je wil een uptime van 99.99%, ook als je onderheid en updates uitvoerd.Dus je kiest voor een distributed of Clusterd File system (bv: CephFS of Hadoop). Wat we hier als 1 NFS server voor stellen met ftp toegang.Voor de database doe het zelfde (bv:MariaDB Galera Cluster), wat we hier voorstellen als 1 MariaDB serverTen slotte heb je nog enkele webservers zodat hier ook redundantie aanwezig is. Als we hier nog een loadbalancer voor plaatsen kunnen we downtime vermijden. ### Webserver* Apache* php7.3* NFS-client![]({{site.baseurl}}/assets/images/apache.png)![]({{site.baseurl}}/assets/images/php.png)Hier draait de apache webserver. De webserver heeft een NFS mount naar de webfiles van de gebruikers. Momenteel werkt deze webserver ook als reverse proxy voor de services op de docker host. De virtualhosts configuratie worden via aan ansible playbook geupdate. Voor SSL is er momenteel een self-signed wildcard certificaat aanwezig. ### FTP* vsftpd* NFS-server* LDAP-client![]({{site.baseurl}}/assets/images/ftp.png)![]({{site.baseurl}}/assets/images/nfs.png)![]({{site.baseurl}}/assets/images/ldap.png)Op deze machine is een NFS-server aanwezig, Dit zorgt er voor dat de webserver aan de bestanden van de gebruiker kan.gebruikers kunnen via FTP bestanden uploaden naar de server. Via de LDAP client kunnen gebruiker gegevens geraadpleegt worden en via ftp dus aanmelden. ### Database* Mariadb 10.4.13* phpMyAdmin![]({{site.baseurl}}/assets/images/mariadb.png)![]({{site.baseurl}}/assets/images/phpmyadmin.png)Op de machine draait een recente versie van MariaDB (10.4), en dus niet de default versie 5.5. Natuurlijk is phpMyAdmin geinstalleerd om gebruiker eenvoudig toegang te geven. ### Docker Op de docker client draaien verschillende containers voor ondersteunende services.![]({{site.baseurl}}/assets/images/docker.png)##### Helpdesk* Zammad ![]({{site.baseurl}}/assets/images/zammad_logo.png)![]({{site.baseurl}}/assets/images/ldap.png)Via Zammad kan je eenvoudig tickets aanmaken. Dankzij de integratie met LDAP kunnen gebruikers gewoon aanmelden met hun account.Je kan tickets toewzijzen en in team oplossen alvorens af te sluiten.Daarnaast kan je binnen Zammad een knowledge base opstellen, ideaal voor een FAQ of om documentatie te plaatsen##### Password vault* Bitwarden![]({{site.baseurl}}/assets/images/bitwarden.png)Bitwarden is een opensource password vault. Een password manager die je zelf kan hosten. Je kan je persoonlijke vault exporteren eenvoudig migreren naar andere Bitwarden instances. De Enterprise versie van Bitwarden ondersteunt LDAP integratie. ##### Status* Cachet![]({{site.baseurl}}/assets/images/cachet.png)Via cachet kan je een status pagina opstellen. je kan hier de verschillende services tonen met hun bijhorende status.Je kan eventueel ook via een API een status aanpassen. ##### Cloud* ownCloud![]({{site.baseurl}}/assets/images/owncloud.png)![]({{site.baseurl}}/assets/images/ldap.png)Via owncloud kan je files uploaden en beheren in de cloud. Gebruikers kunnen via LDAP credentials aanmelden. ### Git* gitlab ![]({{site.baseurl}}/assets/images/gitlab.png)![]({{site.baseurl}}/assets/images/ldap.png)De bekende tegenhanger van github, de community edition is gratis en kan je zelf hostenGebruikers kunnen aanmelden via hun LDAP credentials Ideaal voor gebruiker die een prive Repository willen maar niet willen betalen voor github. ### Monitoring* Zabbix![]({{site.baseurl}}/assets/images/zabbix.png)Via Zabbix kunnen we de andere machines en services monitoren. We kunnen hier mee anticiperen bij opkomende problemen zoals schijven die vol lopen. Alle machine's hebben een Zabbix agent die info verzend naar de server. Zabbix is zeer uitgebreid en bied veel mogelijkheden, wat ook bijdraagt aan de complexiteit. ### Backup* Borg Backup* Borgmatic ![]({{site.baseurl}}/assets/images/borg.png)Borg is een ```deduplicating``` programma om backups te maken. Borg wordt op elke host geinstalleerd via een ansible script. Daarnaast maken we gebruik van borgmatic. een wrapper die de configuratie zeer gebruiksvriendelijk maakt. Zo kunnen we eenvoudig instellen welke bestanden te backuppen en naar welke opslag plaats, ook de retentie kan bepaald worden. Integratie met cronjobs en terugkoppelng met een aantal opties is eenvoudig. Via Borg kunnen we onze backups encrypteren voor veilige opslag. ",
      "url": "/",
      "href": "/httphpDocs/"
    }
    ,
  
    
    "docs-inventory-html": {
      "title": "Inventory",
      "category": "",
      "content": "# pwdroot=passwordansible=ansibleldap= GS!lT74ryPl2H@RmVcsNldap={SSHA}vNkky70REsznqT9DV+LsYK2TGIsKwPA8### Ansible - LDAPID          101IP          192.168.3.101hostname    master### httpdID          102IP          192.168.3.102hostname    httpd#### Ansible* nfsclient.yaml* httpd.yaml### VSFTPDID       |   103IP        |  192.168.3.103hostname   | vsfpd#### Ansible* nfsServer.yaml* vsftpd.yaml* ldapclient.yaml### MariaDBID          104IP          192.168.3.104hostname    mariadb#### Ansible* password=\"password\"echo -e \"$password\\ny\\nn\\ny\\ny\\ny\\ny\" | ./usr/bin/mysql_secure_installationpassword=\"echo -e \\e[5m\\e[93mnice try\\!\\e[25m\\n\\e[32midentity theft is not a joke\\e[36m -Jim\\e[39m\"echo -e \"pwd\\n     Enter current password for root y\\n       Switch to Unix socketn\\n       Change root pwd    y\\n       Remove Anon usery\\n       Disallow remote root loginy\\n       Remove test databasey\"        reload priviliges table## docker{:data-side=\"Docker\"}ID          105IP          192.168.3.105hostname    docker### ansible* Docker.yaml## gitlab {:data-side=\"lol\"}ID          106IP          192.168.3.106hostname    gitlab#### Ansible* gitlab.yaml* go to config* gitlab_copyConfig.yaml### config* go tu url* set password*  password * login with root & pwd* open## zammadDocker run zammad.yaml:80 * maak nieuw systeem aan* Maak admin account aan    * admin@admin.be    * password* geef naam en logo in* oke & overslaan*  tandwiel*  systeem --> integratie --> ldap*  turn on --> instellenserver|ldap://192.168.3.101bind gebruiker | cn=ldapadmin,dc=httphp,dc=localbind wachtwoord | ****user mappinguid | logingivenname | firstnamesn | lastnamemail | email##### roll mappingcn=users,ou=groups,dc=httphp,dc=local | customercn=junior,ou=groups,dc=httphp,dc=local | agentcn=staff,ou=groups,dc=httphp,dc=local | agentcn=admins,ou=groups,dc=httphp,dc=local | admin### knowledge base* zamad tandwiel --> beheer --> knowledge base* sidebar knowledge base    * start editing    * pass title aan    * voeg categorien toe* tandwiel --> instellingen --> beveiliging  wachtwoord vergeten uit zetten## bitwardendockerrun bitwarden.yaml:443bash ./bitwarden.sh installurlnhostidkeynyedit bwdata/config.yamlremove http 80bash ./bitwarden.sh updatemake accountp?D=!hxsMz3SrXn## owncloud:8080admin pwd: password* run ownCloud.yaml* IP:8080 login* settings --> apps --> show disabled apps --> enable LDAP integration* reload page* side bar --> user authentication [SERVER]server | 192.168.3.101port | 389user DN | cn=ldapadmin,dc=httphp,dc=localpwd | ************[USERS]* inetOrgPerson* all groups[Login Attributes]* ldap username* ldap email[GROUPS]* PossixGroups* alle groepen[EXPERT]Override UUID detection* UUID Attribute for Users## cachet:8008* run cachet.yaml * go to IP:8008* complete setup* root | password# zabbixID          107     IP          192.168.3.107hostname    zabbix## asible* ZabbixServer.yaml* go to http://IP/zabbix* next* next* sql password van ansible.yaml file --> zabbix1234* vul IP in bij host* name: zabbix-httphp* next tot einde* login met  * Admin (a->A) * zabbix # borgID          108     IP          192.168.3.108hostname    backup# proxy# ssl# dns",
      "url": "/Docs/inventory.html",
      "href": "/httphpDocs/Docs/inventory.html"
    }
    ,
  
    
    "docs-sub1-test2-html": {
      "title": "child",
      "category": "",
      "content": "# Child",
      "url": "/Docs/sub1/test2.html",
      "href": "/httphpDocs/Docs/sub1/test2.html"
    }
    
  
};
